"use strict";(self.webpackChunksemana_9=self.webpackChunksemana_9||[]).push([[3674],{7834:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"depuracion-consola","title":"Depuraci\xf3n con la Consola","description":"La consola del navegador no solo es una herramienta para mostrar mensajes, sino tambi\xe9n un completo entorno de depuraci\xf3n que te permite interactuar con el c\xf3digo de tu aplicaci\xf3n en tiempo real. En esta secci\xf3n, exploraremos t\xe9cnicas avanzadas de depuraci\xf3n que te permitir\xe1n identificar y resolver problemas de forma eficiente.","source":"@site/console/depuracion-consola.md","sourceDirName":".","slug":"/depuracion-consola","permalink":"/console/depuracion-consola","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_label":"Depuraci\xf3n con la Consola","sidebar_position":8},"sidebar":"docs","previous":{"title":"Logs Avanzados","permalink":"/console/logs-avanzados"}}');var a=r(4848),i=r(8453);const s={sidebar_label:"Depuraci\xf3n con la Consola",sidebar_position:8},c="Depuraci\xf3n con la Consola",t={},l=[{value:"Entorno interactivo de la consola",id:"entorno-interactivo-de-la-consola",level:2},{value:"Evaluaci\xf3n de expresiones",id:"evaluaci\xf3n-de-expresiones",level:3},{value:"Ejecuci\xf3n de sentencias complejas",id:"ejecuci\xf3n-de-sentencias-complejas",level:3},{value:"Hist\xf3rico de comandos",id:"hist\xf3rico-de-comandos",level:3},{value:"Comandos espec\xedficos de depuraci\xf3n",id:"comandos-espec\xedficos-de-depuraci\xf3n",level:2},{value:"Comando <code>debug()</code>",id:"comando-debug",level:3},{value:"Comando <code>monitor()</code>",id:"comando-monitor",level:3},{value:"Comando <code>monitorEvents()</code>",id:"comando-monitorevents",level:3},{value:"Comando <code>keys()</code> y <code>values()</code>",id:"comando-keys-y-values",level:3},{value:"Selecci\xf3n r\xe1pida con <code>$</code> y <code>$$</code>",id:"selecci\xf3n-r\xe1pida-con--y-",level:3},{value:"Breakpoints desde la consola",id:"breakpoints-desde-la-consola",level:2},{value:"Breakpoints condicionales",id:"breakpoints-condicionales",level:3},{value:"Interrupciones mediante funci\xf3n <code>debugger</code>",id:"interrupciones-mediante-funci\xf3n-debugger",level:3},{value:"Breakpoints de eventos",id:"breakpoints-de-eventos",level:3},{value:"Depuraci\xf3n as\xedncrona",id:"depuraci\xf3n-as\xedncrona",level:2},{value:"Promesas y async/await",id:"promesas-y-asyncawait",level:3},{value:"Depuraci\xf3n de timers",id:"depuraci\xf3n-de-timers",level:3},{value:"Evaluaci\xf3n en contexto",id:"evaluaci\xf3n-en-contexto",level:2},{value:"Cambio del contexto de ejecuci\xf3n",id:"cambio-del-contexto-de-ejecuci\xf3n",level:3},{value:"Inyecci\xf3n de c\xf3digo",id:"inyecci\xf3n-de-c\xf3digo",level:3},{value:"Captura y simulaci\xf3n de errores",id:"captura-y-simulaci\xf3n-de-errores",level:2},{value:"Simulaci\xf3n de errores para pruebas",id:"simulaci\xf3n-de-errores-para-pruebas",level:3},{value:"Captura avanzada de errores",id:"captura-avanzada-de-errores",level:3},{value:"Manipulaci\xf3n del DOM desde la consola",id:"manipulaci\xf3n-del-dom-desde-la-consola",level:2},{value:"Evaluar elementos y modificarlos",id:"evaluar-elementos-y-modificarlos",level:3},{value:"Ver eventos asociados a elementos",id:"ver-eventos-asociados-a-elementos",level:3},{value:"Depuraci\xf3n de rendimiento",id:"depuraci\xf3n-de-rendimiento",level:2},{value:"Medir tiempo de ejecuci\xf3n",id:"medir-tiempo-de-ejecuci\xf3n",level:3},{value:"Uso de Performance API",id:"uso-de-performance-api",level:3},{value:"An\xe1lisis de rendimiento con perfiles",id:"an\xe1lisis-de-rendimiento-con-perfiles",level:3},{value:"Optimizaci\xf3n de c\xf3digo",id:"optimizaci\xf3n-de-c\xf3digo",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"depuraci\xf3n-con-la-consola",children:"Depuraci\xf3n con la Consola"})}),"\n",(0,a.jsx)(n.p,{children:"La consola del navegador no solo es una herramienta para mostrar mensajes, sino tambi\xe9n un completo entorno de depuraci\xf3n que te permite interactuar con el c\xf3digo de tu aplicaci\xf3n en tiempo real. En esta secci\xf3n, exploraremos t\xe9cnicas avanzadas de depuraci\xf3n que te permitir\xe1n identificar y resolver problemas de forma eficiente."}),"\n",(0,a.jsx)(n.h2,{id:"entorno-interactivo-de-la-consola",children:"Entorno interactivo de la consola"}),"\n",(0,a.jsx)(n.p,{children:"La consola funciona como un REPL (Read-Eval-Print Loop) completo que te permite ejecutar c\xf3digo JavaScript directamente:"}),"\n",(0,a.jsx)(n.h3,{id:"evaluaci\xf3n-de-expresiones",children:"Evaluaci\xf3n de expresiones"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Evaluaci\xf3n simple\r\n3 + 4\r\n// Devuelve: 7\r\n\r\n// Evaluaci\xf3n de variables existentes\r\nwindow.innerHeight\r\n// Devuelve: 722\r\n\r\n// Acceso a elementos del DOM\r\ndocument.querySelector('.mi-clase').textContent\r\n// Devuelve: \"Texto del elemento\"\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejecuci\xf3n-de-sentencias-complejas",children:"Ejecuci\xf3n de sentencias complejas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Estructuras de control completas\r\nfor (const elemento of document.querySelectorAll('img')) {\r\n  console.log(elemento.src);\r\n}\r\n\r\n// Declaraci\xf3n de funciones\r\nfunction sumarAtributos(selector, atributo) {\r\n  return Array.from(document.querySelectorAll(selector))\r\n    .reduce((total, el) => total + Number(el.getAttribute(atributo) || 0), 0);\r\n}\r\n\r\n// Uso\r\nsumarAtributos('div', 'data-valor');\n"})}),"\n",(0,a.jsx)(n.h3,{id:"hist\xf3rico-de-comandos",children:"Hist\xf3rico de comandos"}),"\n",(0,a.jsx)(n.p,{children:"Puedes navegar por el hist\xf3rico de comandos utilizando:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Flecha arriba (\u2191) para recuperar comandos anteriores"}),"\n",(0,a.jsx)(n.li,{children:"Flecha abajo (\u2193) para avanzar en el hist\xf3rico"}),"\n",(0,a.jsx)(n.li,{children:"Ctrl+L (Cmd+L en Mac) para limpiar la consola"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"comandos-espec\xedficos-de-depuraci\xf3n",children:"Comandos espec\xedficos de depuraci\xf3n"}),"\n",(0,a.jsx)(n.p,{children:"La consola ofrece varios comandos especiales que facilitan la depuraci\xf3n:"}),"\n",(0,a.jsxs)(n.h3,{id:"comando-debug",children:["Comando ",(0,a.jsx)(n.code,{children:"debug()"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function calcularTotal() {\r\n  // c\xf3digo a depurar\r\n}\r\n\r\n// Establece un punto de interrupci\xf3n al inicio de la funci\xf3n\r\ndebug(calcularTotal);\r\n\r\n// Cuando se llame a calcularTotal(), la ejecuci\xf3n se detendr\xe1 al inicio\r\ncalcularTotal();\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"comando-monitor",children:["Comando ",(0,a.jsx)(n.code,{children:"monitor()"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Monitoriza las llamadas a una funci\xf3n\r\nmonitor(document.querySelector);\r\n\r\n// A partir de ahora, cada vez que se llame a querySelector,\r\n// la consola mostrar\xe1 los argumentos usados\r\ndocument.querySelector('.mi-elemento');\r\n// function 'querySelector' called with arguments: .mi-elemento\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"comando-monitorevents",children:["Comando ",(0,a.jsx)(n.code,{children:"monitorEvents()"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Monitorizar todos los eventos de un elemento\r\nconst boton = document.querySelector('#mi-boton');\r\nmonitorEvents(boton);\r\n\r\n// Monitorizar solo ciertos tipos de eventos\r\nmonitorEvents(document.body, ['click', 'keydown']);\r\n\r\n// Detener monitorizaci\xf3n\r\nunmonitorEvents(boton);\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"comando-keys-y-values",children:["Comando ",(0,a.jsx)(n.code,{children:"keys()"})," y ",(0,a.jsx)(n.code,{children:"values()"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Ver todas las propiedades de un objeto\r\nkeys(document);\r\n\r\n// Ver todos los valores de un objeto\r\nvalues(document.body.style);\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"selecci\xf3n-r\xe1pida-con--y-",children:["Selecci\xf3n r\xe1pida con ",(0,a.jsx)(n.code,{children:"$"})," y ",(0,a.jsx)(n.code,{children:"$$"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// $ act\xfaa como document.querySelector\r\n$('#mi-id');\r\n\r\n// $$ act\xfaa como document.querySelectorAll y devuelve un array\r\n$$('.mi-clase').forEach(el => el.style.color = 'red');\r\n\r\n// Tambi\xe9n disponemos de $0 - $4 para los \xfaltimos elementos inspeccionados\r\n$0  // \xdaltimo elemento seleccionado en el panel Elements\r\n$1  // Pen\xfaltimo elemento seleccionado\n"})}),"\n",(0,a.jsx)(n.h2,{id:"breakpoints-desde-la-consola",children:"Breakpoints desde la consola"}),"\n",(0,a.jsx)(n.p,{children:"La consola te permite establecer puntos de interrupci\xf3n en tu c\xf3digo de varias maneras:"}),"\n",(0,a.jsx)(n.h3,{id:"breakpoints-condicionales",children:"Breakpoints condicionales"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// En tu c\xf3digo\r\nfunction procesarItem(item) {\r\n  if (item.id === 'problem\xe1tico') {\r\n    debugger; // La ejecuci\xf3n se detendr\xe1 aqu\xed solo cuando la condici\xf3n se cumpla\r\n  }\r\n  // resto del procesamiento\r\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"interrupciones-mediante-funci\xf3n-debugger",children:["Interrupciones mediante funci\xf3n ",(0,a.jsx)(n.code,{children:"debugger"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function funcionCompleja() {\r\n  // C\xf3digo inicial\r\n  debugger; // La ejecuci\xf3n se detendr\xe1 aqu\xed cuando las herramientas est\xe9n abiertas\r\n  // M\xe1s c\xf3digo\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"breakpoints-de-eventos",children:"Breakpoints de eventos"}),"\n",(0,a.jsx)(n.p,{children:"Desde el panel Sources > Event Listener Breakpoints puedes configurar la detenci\xf3n en:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Eventos del DOM (click, submit, etc.)"}),"\n",(0,a.jsx)(n.li,{children:"Eventos de carga (load, DOMContentLoaded)"}),"\n",(0,a.jsx)(n.li,{children:"Timeout y animaciones"}),"\n",(0,a.jsx)(n.li,{children:"XMLHttpRequest y Fetch"}),"\n",(0,a.jsx)(n.li,{children:"Entre muchos otros"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"depuraci\xf3n-as\xedncrona",children:"Depuraci\xf3n as\xedncrona"}),"\n",(0,a.jsx)(n.h3,{id:"promesas-y-asyncawait",children:"Promesas y async/await"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Seguimiento de promesas rechazadas\r\nasync function obtenerDatos() {\r\n  try {\r\n    const respuesta = await fetch('/api/datos');\r\n    return await respuesta.json();\r\n  } catch (error) {\r\n    console.error('Error en obtenerDatos:', error);\r\n    throw error; // Re-lanzar para seguimiento\r\n  }\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"depuraci\xf3n-de-timers",children:"Depuraci\xf3n de timers"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Identificar timers por ID\r\nconst timerId = setTimeout(() => {\r\n  console.log('Ejecutando timer');\r\n}, 1000);\r\n\r\n// Cancelar si es necesario\r\nclearTimeout(timerId);\r\n\r\n// Verificar timers activos\r\n// En Chrome, abre el panel Memory y toma una instant\xe1nea para buscar \"Timer\"\n"})}),"\n",(0,a.jsx)(n.h2,{id:"evaluaci\xf3n-en-contexto",children:"Evaluaci\xf3n en contexto"}),"\n",(0,a.jsx)(n.h3,{id:"cambio-del-contexto-de-ejecuci\xf3n",children:"Cambio del contexto de ejecuci\xf3n"}),"\n",(0,a.jsx)(n.p,{children:"Durante la depuraci\xf3n con breakpoints, puedes:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Cambiar el scope/\xe1mbito en el panel de Scope"}),"\n",(0,a.jsx)(n.li,{children:"Evaluar expresiones en el contexto actual"}),"\n",(0,a.jsx)(n.li,{children:"Modificar valores de variables en tiempo real"}),"\n",(0,a.jsx)(n.li,{children:"Continuar la ejecuci\xf3n con diferentes valores"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"inyecci\xf3n-de-c\xf3digo",children:"Inyecci\xf3n de c\xf3digo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Crear un script en la p\xe1gina actual\r\nconst script = document.createElement('script');\r\nscript.textContent = `\r\n  window.miHelperDebug = {\r\n    estado: {},\r\n    log: function(mensaje, datos) {\r\n      this.estado[mensaje] = datos;\r\n      console.log('[DEBUG]', mensaje, datos);\r\n    }\r\n  };\r\n`;\r\ndocument.head.appendChild(script);\r\n\r\n// Ahora puedes usar esta utilidad desde cualquier parte\r\nmiHelperDebug.log('test', {valor: 42});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"captura-y-simulaci\xf3n-de-errores",children:"Captura y simulaci\xf3n de errores"}),"\n",(0,a.jsx)(n.h3,{id:"simulaci\xf3n-de-errores-para-pruebas",children:"Simulaci\xf3n de errores para pruebas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Forzar un error espec\xedfico\r\ntry {\r\n  throw new TypeError('Error de simulaci\xf3n');\r\n} catch (error) {\r\n  console.error('Error capturado:', error);\r\n  // An\xe1lisis o procesamiento adicional\r\n}\r\n\r\n// Simular error de red\r\nconst respuestaOriginal = window.fetch;\r\nwindow.fetch = function(...args) {\r\n  console.log('Interceptando fetch a:', args[0]);\r\n  if (args[0].includes('/api/test')) {\r\n    console.warn('Simulando error de red');\r\n    return Promise.reject(new Error('Error de red simulado'));\r\n  }\r\n  return respuestaOriginal.apply(this, args);\r\n};\n"})}),"\n",(0,a.jsx)(n.h3,{id:"captura-avanzada-de-errores",children:"Captura avanzada de errores"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"class ErrorTracker {\r\n  constructor() {\r\n    this.errores = [];\r\n    this.configurar();\r\n  }\r\n  \r\n  configurar() {\r\n    window.addEventListener('error', (evento) => this.capturarError(evento));\r\n    window.addEventListener('unhandledrejection', (evento) => \r\n      this.capturarRechazo(evento)\r\n    );\r\n  }\r\n  \r\n  capturarError(evento) {\r\n    const error = {\r\n      tipo: 'error',\r\n      mensaje: evento.message,\r\n      origen: evento.filename,\r\n      linea: evento.lineno,\r\n      columna: evento.colno,\r\n      timestamp: new Date(),\r\n      stack: evento.error?.stack,\r\n      contexto: this.obtenerContexto()\r\n    };\r\n    \r\n    this.errores.push(error);\r\n    this.registrarError(error);\r\n  }\r\n  \r\n  capturarRechazo(evento) {\r\n    const error = {\r\n      tipo: 'promesa',\r\n      razon: evento.reason?.message || String(evento.reason),\r\n      timestamp: new Date(),\r\n      stack: evento.reason?.stack,\r\n      contexto: this.obtenerContexto()\r\n    };\r\n    \r\n    this.errores.push(error);\r\n    this.registrarError(error);\r\n  }\r\n  \r\n  obtenerContexto() {\r\n    return {\r\n      url: window.location.href,\r\n      userAgent: navigator.userAgent,\r\n      viewport: {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      },\r\n      // Informaci\xf3n de estado de la aplicaci\xf3n\r\n      // usuario: miApp.usuario?.id,\r\n      // vista: miApp.vistaActual\r\n    };\r\n  }\r\n  \r\n  registrarError(error) {\r\n    console.group('%cError capturado', 'color: #ff5555; font-weight: bold;');\r\n    console.error(error.mensaje || error.razon);\r\n    console.log('Detalles:', error);\r\n    console.groupEnd();\r\n    \r\n    // Aqu\xed podr\xedas enviar a un servicio de monitoreo\r\n  }\r\n  \r\n  obtenerInforme() {\r\n    return {\r\n      total: this.errores.length,\r\n      errores: this.errores,\r\n      resumen: this.generarResumen()\r\n    };\r\n  }\r\n  \r\n  generarResumen() {\r\n    const conteo = {};\r\n    this.errores.forEach(error => {\r\n      const mensaje = error.mensaje || error.razon;\r\n      conteo[mensaje] = (conteo[mensaje] || 0) + 1;\r\n    });\r\n    return conteo;\r\n  }\r\n}\r\n\r\n// Uso\r\nconst tracker = new ErrorTracker();\r\n\r\n// M\xe1s tarde\r\nconsole.table(tracker.obtenerInforme().resumen);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"manipulaci\xf3n-del-dom-desde-la-consola",children:"Manipulaci\xf3n del DOM desde la consola"}),"\n",(0,a.jsx)(n.h3,{id:"evaluar-elementos-y-modificarlos",children:"Evaluar elementos y modificarlos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Seleccionar y modificar elementos\r\nconst titulo = $('h1');\r\ntitulo.style.color = 'blue';\r\ntitulo.textContent = 'Modificado desde la consola';\r\n\r\n// Obtener computedStyle\r\ngetComputedStyle(titulo).fontSize\r\n// \"32px\"\r\n\r\n// Generar un informe de todos los estilos\r\nconst estilos = getComputedStyle(titulo);\r\nObject.keys(estilos)\r\n  .filter(k => !k.startsWith('webkit'))\r\n  .filter(k => isNaN(parseInt(k)))\r\n  .reduce((obj, k) => { obj[k] = estilos[k]; return obj; }, {})\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ver-eventos-asociados-a-elementos",children:"Ver eventos asociados a elementos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// En Chrome, selecciona un elemento en Elements\r\n// Luego ve a la pesta\xf1a Event Listeners\r\n\r\n// Alternativa desde la consola\r\nfunction getEventListeners(element) {\r\n  const listeners = [];\r\n  \r\n  if (element && element._events) {\r\n    for (const [type, handlers] of Object.entries(element._events)) {\r\n      handlers.forEach(handler => {\r\n        listeners.push({ type, handler });\r\n      });\r\n    }\r\n  }\r\n  \r\n  return listeners;\r\n}\r\n\r\n// Uso\r\ngetEventListeners($('#mi-boton'));\n"})}),"\n",(0,a.jsx)(n.h2,{id:"depuraci\xf3n-de-rendimiento",children:"Depuraci\xf3n de rendimiento"}),"\n",(0,a.jsx)(n.h3,{id:"medir-tiempo-de-ejecuci\xf3n",children:"Medir tiempo de ejecuci\xf3n"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Medir el tiempo que tarda en ejecutarse un bloque de c\xf3digo\r\nconsole.time('miProceso');\r\n\r\n// C\xf3digo a medir\r\nfor (let i = 0; i < 1000000; i++) {\r\n  Math.sqrt(i);\r\n}\r\n\r\nconsole.timeEnd('miProceso');\r\n// Salida: miProceso: 12.345ms\n"})}),"\n",(0,a.jsx)(n.h3,{id:"uso-de-performance-api",children:"Uso de Performance API"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Marcar puntos espec\xedficos en el tiempo\r\nperformance.mark('inicio');\r\n\r\n// C\xf3digo a medir\r\nfor (let i = 0; i < 1000000; i++) {\r\n  Math.sqrt(i);\r\n}\r\n\r\nperformance.mark('fin');\r\n\r\n// Medir la diferencia entre las marcas\r\nperformance.measure('miProceso', 'inicio', 'fin');\r\n\r\n// Ver resultados\r\nconsole.log(performance.getEntriesByName('miProceso'));\r\n// Salida: [{name: \"miProceso\", startTime: 123.456, duration: 12.345}]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"an\xe1lisis-de-rendimiento-con-perfiles",children:"An\xe1lisis de rendimiento con perfiles"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Abre las DevTools del navegador."}),"\n",(0,a.jsxs)(n.li,{children:["Ve a la pesta\xf1a ",(0,a.jsx)(n.strong,{children:"Performance"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Haz clic en el bot\xf3n de grabar y realiza las acciones que deseas analizar."}),"\n",(0,a.jsx)(n.li,{children:"Det\xe9n la grabaci\xf3n y revisa los resultados, como el tiempo de ejecuci\xf3n de funciones, FPS, y m\xe1s."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"optimizaci\xf3n-de-c\xf3digo",children:"Optimizaci\xf3n de c\xf3digo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Ejemplo de optimizaci\xf3n: evitar c\xe1lculos redundantes\r\nconst elementos = document.querySelectorAll('.mi-clase');\r\nconst total = elementos.length;\r\n\r\nfor (let i = 0; i < total; i++) {\r\n  elementos[i].style.color = 'red';\r\n}\r\n\r\n// En lugar de recalcular elementos.length en cada iteraci\xf3n\n"})}),"\n",(0,a.jsx)(n.p,{children:"Con estas herramientas y t\xe9cnicas, puedes identificar cuellos de botella en tu c\xf3digo y optimizarlo para un mejor rendimiento."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var o=r(6540);const a={},i=o.createContext(a);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);